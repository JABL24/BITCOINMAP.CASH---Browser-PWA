<?php
//header("Cache-Control: max-age=2592000"); //30days (60sec * 60min * 24hours * 30days)

$string = file_get_contents("places.json");
$json = json_decode($string, true);
$firstRun = true;

$discountText = array("10% discount on first BCH payment","20% discount on first BCH payment","Accepting Bitcoin payments soon","Trade Bitcoin here with 0.0% fee","DASH, BCH, BTC accepted here","Information from discoverdash.com");
$tagText = array('Spicy üå∂Ô∏è',
                     'Salty ü•®',
                     'Sour üòú',
                     'Organic üêµ',
                     'Vegetarian ü•ï',
                     'Vegan üêÆ',
                     'Healthy üíì',
                     'Burger üçî',
                     'Sandwich ü•™',
                     'Muffin üßÅ', //The muffin icon is invisible
                     'Brownie ü•Æ', //Brownie is invisible too
                     'Cake üéÇ',
                     'Cookie üç™',
                     'Arabic ü•ô',
                     'Pizza üçï',
                     'Salad ü•ó',
                     'Smoothie ü•§',
                     'Fruit üçì',
                     'IceCream üç¶',
                     'Raw ü•¶',
                     'Handbag üëú',
                     'Cosmetic üíÖ',
                     'Tattoo ‚ô£',
                     'Piercing üåÄ',
                     'Souvenir üéÅ',
                     'Hatha üßò',
                     'Vinyasa üßò',
                     'Massage üíÜ',
                     'Upcycled üå≤',
                     'Coffee ‚òï',
                     'NoGluten üåΩ',
                     'Cocktails üçπ',
                     'Beer üç∫',
                     'Music üéµ',
                     'Chinese üçú',
                     'Duck üç±',
                     'Rock üé∏',
                     'LiveDJ üéß',
                     'Terrace ‚òÄÔ∏è',
                     'Seeds üå±',
                     'Grinder üçå',
                     'Papers üö¨',
                     'Advice üå¥',
                     'Calzone ü•ü',
                     'Falafel ü•ô',
                     'MakeUp ü§°',
                     'Gifts üéÅ',
                     'Tapas üç†',
                     'Copas üçπ',
                     'Piadina üåÆ',
                     'Cheese üßÄ',
                     'Grains üåæ',
                     'Fashion üëó',
                     'Fair ü§ó',
                     'Women üë©',
                     'Drinks üçπ',
                     'TV üì∫',
                     'Retro ü¶Ñ',
                     'Feta üêê',
                     'DASH √ê',
                     'BTC ‚Çø',
                     'BCH ‚Çø',
                     'ANYPAY ‚ÇøÔ∏è',
                     'ETH ‚Çø',
                     'HotDog üå≠',
                     'Fast ‚è©',
                     'Kosher ü¶Ñ',
                     'Sushi üç£',
                     'Moto üõµ',
                     'Coche üöò',
                     'GOCRYPTO ‚Çø',
                     'Chicken üêî',
                     'Rabbit üê∞',
                     'Potato ü•î',
                     'Kumpir ü•î',
                     'Kebap üêÑ',
                     'ATM üè¶',
                     'Gyros üêñ',
                     'Coconut ü••',
                     'ToGo üì¶',
                     'Meditation üßò',
                     'Wine üç∑',
                     'Champagne ü•Ç',
                     'Alcohol üçæ',
                     'Booze ü•É',
                     'Pancakes ü•û', //You cant remove because we use fixed indexes, but replace with another string that is unlikely to be typed in by the user
                     'Croissant ü•ê',
                     'Popcorn üçø',
                     'SoftIce üç¶',
                     'Dango üç°',
                     'BnB üõèÔ∏è',
                     'Haircut ‚úÇÔ∏è',
                     'Candy üç≠',
                     'Beauty üíÖ',
                     'Miso üç±',
                     'Chocolate üç´',
                     'Rice üçö',
                     'Seafood ü¶Ä',
                     'Hostel üõèÔ∏è',
                     'Fries üçü',
                     'Fish üêü', //100
                     'Chips üçü',
                     'Italian üáÆüáπ',
                     'Whiskey ü•É',
                     ' - - - ', //This is number 104 the no tag indicator, currently not used
                     'Bourbon ü•É', //105
                     'Liquor ü•É',
                     'Men ‚ôÇÔ∏è',
                     'Pasta üçù',
                     'Dessert üç¨', //109
                     'Starter ü•†', //110
                     'BBQ üçó',
                     'Noodle üçú',
                     'Korean ü•ü',
                     'Market üß∫', //invisible item
                     'Bread ü•ñ',
                     'Bakery ü•®',
                     'Cafe ‚òï',
                     'Games üéÆ',
                     'Snacks üçø',
                     'Elegant üï¥Ô∏è',
                     'Piano üéπ',
                     'Brunch üç±',
                     'Nachos üåΩ',
                     'Lunch ü•°',
                     'Breakfast ü•ê',
                     'HappyHour ü•≥', //hidden item
                     'LateNight üåú',
                     'Mexican üá≤üáΩ',
                     'Burrito üåØ',
                     'Tortilla üåÆ',
                     'Indonesian üáÆüá©',
                     'Sports üèÜ',
                     'Pastry ü•ß',
                     'Bistro üç≤',
                     'Soup ü•£',
                     'Tea üçµ',
                     'Onion',
                     'Steak ü•©',
                     'Shakes ü•§',
                     'Empanadas ü•ü',
                     'Dinner üçΩÔ∏è',
                     'Sweet üç≠',
                     'Fried üç≥',
                     'Omelette ü•ö',
                     'Gin üç∏',
                     'Donut üç©',
                     'Delivery üöö',
                     'Cups ‚òï',
                     'Filter',
                     'Juice üçä',
                     'Vietnamese üáªüá≥',
                     'Pie ü•Æ', //invisible item
                     'Unagi üê°',
                     'Greek üá¨üá∑',
                     'Japanese üáØüáµ',
                     'Tacos üåÆ',
                     'Kombucha üçµ',
                     'Indian üáÆüá≥',
                     'Nan ü•™',
                     'Club üé∂',
                     'Honey üçØ',
                     'Pool üé±',
                     'Hotel üè®',
                     'Pork ü•ì',
                     'Ribs üçñ',
                     'Kava üçµ',
                     'Chai üçµ',
                     'Izzy üçµ',
                     'Matcha üçµ',
                     'Oden üç¢',
                     'Latte ‚òï',
                     'DASHText √ê',
                     'CoinTigo ‚Çø',
                     'CoinText ‚Çø',
                     'Salamantex ‚Çø',
                     'CryptoBuyer ‚Çø',
                     'XPay ‚Çø');

$filter = isset($_GET['category']) ? $_GET['category'] : '';
$param_id = isset($_GET['id']) ? $_GET['id'] : '';
$tagfilter = isset($_GET['tag']) ? $_GET['tag'] : '';
$param_location = isset($_GET['location']) ? $_GET['location'] : '';

$categories = array("restaurant","food","bar","super","shop","hotel");

$isChrome = false;
//$isChrome = strpos($_SERVER['HTTP_USER_AGENT'], 'Chrome') !== false;
$imageType = $isChrome ? 'webp' : 'gif';
//$imageType = 'gif';

echo "<br />";
echo "<br />";
echo "<br />";

foreach ($json as $key => $value) {
    if ($filter === "restaurant" && $value['t'] !== "0") {
      continue;
    } else if ($filter === "food" && $value['t'] !== "1") {
      continue;
    } else if ($filter === "bar" && $value['t'] !== "2") {
      continue;
    } else if ($filter === "super" && $value['t'] !== "3") {
      continue;
    } else if ($filter === "shop" && $value['t'] !== "4") {
      continue;
    } else if ($filter === "hotel" && $value['t'] !== "5") {
      continue;
    }
    $category = $categories[$value['t']];

    $id = $value['p'];

    if (isset($_GET['id']) && $param_id !== $id)
      continue;

    $type = $value['t'];
    $name = $value['n'];
    $discount = $value['d'];
    $splitted = explode(",",$value['a']);
    $tags = "";
    $tagsArray = array();
    foreach ($splitted as $s) {
      if ($s === "104") {
        $tags = "Write History -> Spend Bitcoin!!!";
        continue;
      }

       $tags .= "<a href='/?tag=" . $tagText[$s] . "'>" . $tagText[$s] . "</a>&nbsp;&nbsp;";
       array_push($tagsArray, $tagText[$s]);
    }
    $tags = substr($tags, 0, strlen($tags) - 6);
    $location = $value['l'];
    $splittedLocation = explode(", ",$location);
    $stars = $value['s'];
    $count = $value['c'];

    if (isset($_GET['tag'])) {
      $containsTag = false;
      foreach ($tagsArray as $value) {
        if (strtolower($value) === strtolower($tagfilter)) {
          $containsTag = true;
        }
      }

      if (!$containsTag)
        continue;
    }

    if (isset($_GET['location'])) {
      $containsLocation = false;
      foreach ($splittedLocation as $value) {
        if (strtolower($value) === strtolower($param_location)) {
          $containsLocation = true;
        }
      }

      if (!$containsLocation)
        continue;
    }


    if (!$firstRun) {
      echo "<hr />";
    }
    $firstRun = false;
    $directions='#';

    $directions = "https://google.com/maps/search/?api=1&query=" . $value['x'] . "," . $value['y'];

    echo "<div class='piccontainer'><img width='640' height='480' alt='" . $name . "' class='pic lazy' data-src='https://bitcoinmap.cash/img/app/$id.gif' /></div>";
    echo "<h3 class='name'><a href='/?id=$id'>$name</a></h3>";
    echo "<div class='secondrow'><span class='reviews'>‚≠ê $stars</span>";
    if (strlen($category) > 1)
      echo "<a href='/?category=$category'><img class='icon' alt='" . $category . "' src='img/icons/icon$type.png' /><a/>";
    else
      echo "<img class='icon' alt='icon" . $type . "' src='img/icons/icon$type.png' />";
    echo "<a class='location' href='/?location=$splittedLocation[0]'>$splittedLocation[0]</a>";
    echo ", <a class='location' href='/?location=$splittedLocation[1]'>$splittedLocation[1]</a>";
    echo ", <a class='location' href='/?location=$splittedLocation[2]'>$splittedLocation[2]</a></div>";
    //echo "<h4 class='discount'>$discountText[$discount]</h4>";
    echo "<h4 class='tags'>$tags</h4>";
    if ($value['x'] > 0)
    echo "<div class='batschcontainer'><a href='$directions' target='_blank'><img class='batsch' alt='Google Maps Badge' src='img/badges/google-maps-badge564x168.png' /></a>";
    else
    echo "<div class='batschcontainer'><img class='batsch' alt='Google Maps Badge' src='img/badges/google-maps-badge564x168.png' />";
    echo "<a href='https://bitcoinmap.cash/localbitcoinmap' target='_blank'><img class='batsch' alt='Google Play Badge' src='img/badges/google-play-badge564x168.png' /></a></div>";
}
?>
